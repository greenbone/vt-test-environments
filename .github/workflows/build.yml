name: Build and publish Docker images
on:
  push:
    branches: [ main ]
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - DOCKERFILE: alma_linux
            BASEIMAGE: almalinux
            TAG: 8.5
          - DOCKERFILE: alma_linux
            BASEIMAGE: almalinux
            TAG: 8.6
          - DOCKERFILE: alma_linux
            BASEIMAGE: almalinux
            TAG: 9.0
          - DOCKERFILE: amazon_linux
            BASEIMAGE: amazonlinux
            TAG: 1
          - DOCKERFILE: amazon_linux
            BASEIMAGE: amazonlinux
            TAG: 2
          - DOCKERFILE: amazon_linux
            BASEIMAGE: amazonlinux
            TAG: 2022
          - DOCKERFILE: debian_linux
            BASEIMAGE: debian/eol
            TAG: woody
          - DOCKERFILE: debian_linux
            BASEIMAGE: debian/eol
            TAG: sarge
          - DOCKERFILE: debian_linux
            BASEIMAGE: debian/eol
            TAG: etch
          - DOCKERFILE: debian_linux
            BASEIMAGE: debian/eol
            TAG: lenny
          - DOCKERFILE: debian_linux
            BASEIMAGE: debian/eol
            TAG: squeeze
          - DOCKERFILE: debian_linux
            BASEIMAGE: debian/eol
            TAG: wheezy
          - DOCKERFILE: debian_linux
            BASEIMAGE: debian/eol
            TAG: jessie
          - DOCKERFILE: debian_linux
            BASEIMAGE: debian
            TAG: stretch
          - DOCKERFILE: debian_linux
            BASEIMAGE: debian
            TAG: buster
          - DOCKERFILE: debian_linux
            BASEIMAGE: debian
            TAG: bullseye
          - DOCKERFILE: mageia_linux
            BASEIMAGE: mageia
            TAG: 7
          - DOCKERFILE: mageia_linux
            BASEIMAGE: mageia
            TAG: 8
          - DOCKERFILE: oracle_linux
            BASEIMAGE: container-registry.oracle.com/os/oraclelinux
            TAG: 5
            UPDATED: false
          - DOCKERFILE: oracle_linux
            BASEIMAGE: container-registry.oracle.com/os/oraclelinux
            TAG: 6
          - DOCKERFILE: oracle_linux
            BASEIMAGE: container-registry.oracle.com/os/oraclelinux
            TAG: 7
          - DOCKERFILE: oracle_linux
            BASEIMAGE: container-registry.oracle.com/os/oraclelinux
            TAG: 8
          - DOCKERFILE: rocky_linux
            BASEIMAGE: rockylinux
            TAG: 8.5
          - DOCKERFILE: slackware_linux
            BASEIMAGE: vbatts/slackware
            TAG: 13.0
          - DOCKERFILE: slackware_linux
            BASEIMAGE: vbatts/slackware
            TAG: 13.37
          - DOCKERFILE: slackware_linux
            BASEIMAGE: vbatts/slackware
            TAG: 14.0
          - DOCKERFILE: slackware_linux
            BASEIMAGE: vbatts/slackware
            TAG: 14.1
          - DOCKERFILE: slackware_linux
            BASEIMAGE: vbatts/slackware
            TAG: 14.2
          - DOCKERFILE: slackware_linux
            BASEIMAGE: vbatts/slackware
            TAG: current
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          file: ${{ matrix.DOCKERFILE }}.dockerfile
          tags: ghcr.io/${{ github.repository }}/${{ matrix.DOCKERFILE }}:${{ matrix.TAG }}
          build-args: |
            BASEIMAGE=${{ matrix.BASEIMAGE }}
            TAG=${{ matrix.TAG }}

      - name: Test Docker image
        run: |
          docker run --rm -d --name target -p 2222:22 \
            ghcr.io/${{ github.repository }}/${{ matrix.DOCKERFILE }}:${{ matrix.TAG }}
          sshpass -p demo ssh \
            -o "StrictHostKeyChecking no" \
            -o "KexAlgorithms $(ssh -Q kex | tr '\n' ',' | head -c -1)" \
            -o "Ciphers $(ssh -Q ciphers | tr '\n' ',' | head -c -1)" \
            demo@localhost -p 2222 echo "Hello from \$(whoami)@\$(hostname)"
          docker stop target

      - name: Publish Docker image
        uses: docker/build-push-action@v2
          with:
            context: .
            push: true
            tags: ghcr.io/${{ github.repository }}/${{ matrix.DOCKERFILE }}:${{ matrix.TAG }}
